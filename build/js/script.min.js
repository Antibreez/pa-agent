"use strict";$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input");function n(e){e.preventDefault(),e.stopPropagation()}function i(t){e.classList.add("highlight")}function o(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,n,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,o,!1)})),e.addEventListener("drop",(function(e){var n=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=n,c()}),!1);var c=function(){a(t)},a=function(t){if(t.files&&t.files[0]){var n=new FileReader;n.onload=function(n){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name},n.readAsDataURL(t.files[0])}};t.addEventListener("change",c)}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=document.querySelectorAll(".delivery-or-pickup__modal-time");if(e[0]){var t=new Inputmask("99:99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".input-text");e[0]&&e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t=document.querySelector("body");function n(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.onResize=this.onResize.bind(this),this.addEventListeners()}n.prototype.open=function(){this.modal.classList.add("js-show"),t.classList.add("js__body-no-scroll")},n.prototype.close=function(){this.modal.classList.remove("js-show"),t.classList.remove("js__body-no-scroll")},n.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},n.prototype.onCloseClick=function(){this.close()},n.prototype.onTriggerClick=function(){this.open()},n.prototype.onResize=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},n.prototype.addEventListeners=function(){var e,t;this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick),window.addEventListener("resize",(e=this.onResize,function(n){t&&clearTimeout(t),t=setTimeout(e,100,n)}))},window.Modal=n}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e[0]&&(e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))})))}(),$(".select").select2(),$(".select").on("select2:select",(function(e){$(this).addClass("picked")})),function(){var e=document.querySelector(".contract-info__cancellation");if(e){var t=document.getElementById("cancellation__modal");new Modal(e,t)}}(),$(".contract-info__delivered-toggle").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){if(document.querySelector(".contract-services")){var e=document.querySelectorAll(".contract-services__link"),t=function(e){var t=e.target;console.log(t.classList.contains("chekcbox-btn__label")),(t.classList.contains("checkbox-btn__label")||t.classList.contains("checkbox-btn__checkbox")||t.classList.contains("deliver-or-pickup__confirm-btn")||t.classList.contains("contract-services__delivery-confirm"))&&e.preventDefault()};e.forEach((function(e){e.addEventListener("click",t)}))}}(),document.querySelector(".contracts-all")&&$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".deliver-or-pickup__confirm-btn");if(e[0]){$("#delivery-date").datepicker().on("change",(function(e){s()}));var t=document.getElementById("delivery-or-pickup__modal"),n=t.querySelector(".modal__close"),i=t.querySelector(".modal__submit"),o=t.querySelector(".delivery-or-pickup__modal-input-file"),c=t.querySelector(".input-file__input"),a=t.querySelector(".delivery-or-pickup__modal-date"),l=t.querySelector(".delivery-or-pickup__modal-time"),r=t.querySelector(".checkbox__input");e.forEach((function(e){new Modal(e,t)}));var s=function(e){d()&&i.hasAttribute("disabled")?i.removeAttribute("disabled"):d()||i.hasAttribute("disabled")||i.setAttribute("disabled","")},d=function(){return $("#delivery-date").datepicker("getDate")&&""!==l.value&&!0===r.checked&&""!==c.value};n.addEventListener("click",(function(){o.classList.contains("loaded")&&(o.classList.remove("loaded"),c.value="",i.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(c.type="",c.type="file")),a.value="",l.value="",r.checked=!1,$("#delivery-date").datepicker("setDate","")})),a.addEventListener("input",s),l.addEventListener("input",s),c.addEventListener("change",s),r.addEventListener("change",s)}}(),$(".filters__btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".payment-waiting__confirm-btn");if(e[0]){$("#payment-date").datepicker();var t=document.getElementById("payment-waiting__modal"),n=t.querySelector(".modal__close"),i=t.querySelector(".transactions__check-all input"),o=t.querySelector(".payment-waiting__modal-sender input"),c=t.querySelector(".payment-waiting__modal-recipient input"),a=t.querySelector(".payment-waiting__modal-sum input"),l=t.querySelector(".payment-waiting__modal-purpose input"),r=function(){return t.querySelectorAll(".transactions__check input")};e.forEach((function(e){new Modal(e,t)})),n.addEventListener("click",(function(){i.checked=!1,r().forEach((function(e){e.checked=!1})),$("#payment-date").datepicker("setDate",""),o.value="",c.value="",a.value="",l.value=""})),i.addEventListener("change",(function(){r().forEach((function(e){i.checked?e.checked=!0:e.checked=!1}))}))}}(),$(".support__docs-btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelector(".contract-info__verification");if(e){var t=document.getElementById("verification__modal"),n=t.querySelector(".verification__modal-input-file"),i=t.querySelector(".input-file__input"),o=t.querySelector(".modal__close"),c=document.querySelector(".modal__save");new Modal(e,t),o.addEventListener("click",(function(){n.classList.contains("loaded")&&(n.classList.remove("loaded"),i.value="",c.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(i.type="",i.type="file"))})),i.addEventListener("change",(function(){""!==i.value&&c.removeAttribute("disabled")}))}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
