"use strict";!function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input");function i(e){e.preventDefault(),e.stopPropagation()}function n(t){e.classList.add("highlight")}function o(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,n,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,o,!1)})),e.addEventListener("drop",(function(e){var i=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=i,s()}),!1);var s=function(){l(t)},l=function(t){if(t.files&&t.files[0]){var i=new FileReader;i.onload=function(i){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name},i.readAsDataURL(t.files[0])}};t.addEventListener("change",s)}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=document.querySelectorAll(".delivery-or-pickup__modal-time");if(e[0]){var t=new Inputmask("99:99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".input-text");e[0]&&e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t=document.querySelector("body");function i(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.onResize=this.onResize.bind(this),this.addEventListeners()}i.prototype.open=function(){this.modal.classList.add("js-show"),t.classList.add("js__body-no-scroll")},i.prototype.close=function(){this.modal.classList.remove("js-show"),t.classList.remove("js__body-no-scroll")},i.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},i.prototype.onCloseClick=function(){this.close()},i.prototype.onTriggerClick=function(){this.open()},i.prototype.onResize=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},i.prototype.addEventListeners=function(){var e,t;this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick),window.addEventListener("resize",(e=this.onResize,function(i){t&&clearTimeout(t),t=setTimeout(e,100,i)}))},window.Modal=i}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e[0]&&(e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))})))}(),$(".select").select2(),$(".select").on("select2:select",(function(e){$(this).addClass("picked")})),$(".contract-info__delivered-toggle").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),document.querySelector(".contracts-all")&&$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".deliver-or-pickup__confirm-btn");if(e[0]){$("#delivery-date").datepicker();var t=document.getElementById("delivery-or-pickup__modal"),i=t.querySelector(".modal__close"),n=t.querySelector(".delivery-or-pickup__modal-input-file"),o=t.querySelector(".input-file__input"),s=t.querySelector(".delivery-or-pickup__modal-time"),l=t.querySelector(".delivery-or-pickup__modal-time"),c=t.querySelector(".checkbox__input");e.forEach((function(e){new Modal(e,t)}));i.addEventListener("click",(function(){n.classList.contains("loaded")&&(n.classList.remove("loaded"),s.value="",l.value="",c.checked=!1,$("#delivery-date").datepicker("setDate",""),o.value="",/safari/i.test(navigator.userAgent)||(o.type="",o.type="file"))}))}}(),$(".filters__btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".payment-waiting__confirm-btn");if(e[0]){$("#delivery-date").datepicker();var t=document.getElementById("payment-waiting__modal"),i=t.querySelector(".modal__close");e.forEach((function(e){new Modal(e,t)}));i.addEventListener("click",(function(){}))}}(),$(".support__docs-btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")}));
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdC5qcyIsImlucHV0LWZpbGUuanMiLCJpbnB1dC1tYXNrLmpzIiwiaW5wdXQtdGV4dC5qcyIsIm1vZGFsLmpzIiwic2VhcmNoLmpzIiwic2VsZWN0LmpzIiwiY29udHJhY3QtcGFnZS5qcyIsImNvbnRyYWN0cy1hbGwuanMiLCJkZWxpdmVyeS1tb2RhbC5qcyIsImZpbHRlcnMuanMiLCJwYXltZW50LWNvbmZpcm0tbW9kYWwuanMiLCJzdXBwb3J0LmpzIl0sIm5hbWVzIjpbImZpbGVEcm9wQXJlYSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsIm1ha2VGaWxlTG9hZCIsImZpbGVJbnB1dCIsInF1ZXJ5U2VsZWN0b3IiLCJwcmV2ZW50RGVmYXVsdHMiLCJlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJoaWdobGlnaHQiLCJjbGFzc0xpc3QiLCJhZGQiLCJ1bmhpZ2hsaWdodCIsInJlbW92ZSIsImZvckVhY2giLCJldmVudE5hbWUiLCJhZGRFdmVudExpc3RlbmVyIiwiZmlsZXMiLCJkYXRhVHJhbnNmZXIiLCJ2YWx1ZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCJ0eXBlIiwib25GaWxlQ2hhbmdlIiwicmVhZFVybCIsImlucHV0IiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsInBhcmVudE5vZGUiLCJuZXh0RWxlbWVudFNpYmxpbmciLCJ0ZXh0Q29udGVudCIsIm5hbWUiLCJyZWFkQXNEYXRhVVJMIiwid2luZG93IiwiaXRlbSIsImRlbGl2ZXJ5VGltZUlucHV0cyIsImltIiwiSW5wdXRtYXNrIiwibWFzayIsImlucHV0cyIsInNwbGl0Iiwiam9pbiIsImNvbnRhaW5zIiwidmgiLCJpbm5lckhlaWdodCIsImRvY3VtZW50RWxlbWVudCIsInN0eWxlIiwic2V0UHJvcGVydHkiLCJjb25jYXQiLCIkYm9keSIsIk1vZGFsIiwidHJpZ2dlciIsIm1vZGFsIiwidGhpcyIsIm92ZXJsYXkiLCJjbG9zZUJ0biIsIm9uT3ZlcmxheUNsaWNrIiwiYmluZCIsIm9uQ2xvc2VDbGljayIsIm9uVHJpZ2dlckNsaWNrIiwib25SZXNpemUiLCJhZGRFdmVudExpc3RlbmVycyIsInByb3RvdHlwZSIsIm9wZW4iLCJjbG9zZSIsInRhcmdldCIsImZ1bmMiLCJ0aW1lciIsImV2ZW50IiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsIml0ZW1zIiwic2VhcmNoIiwicHJldmlvdXNFbGVtZW50U2libGluZyIsIiQiLCJzZWxlY3QyIiwib24iLCJhZGRDbGFzcyIsImNsaWNrIiwicGFyZW50IiwibmV4dCIsInNsaWRlVG9nZ2xlIiwidG9nZ2xlQ2xhc3MiLCJkYXRlcGlja2VyIiwiZGVsaXZlcnlCdG5zIiwiZ2V0RWxlbWVudEJ5SWQiLCJmaWxlSW5wdXRCbG9jayIsImRhdGVJbnB1dCIsInRpbWVJbnB1dCIsImNvbmZpcm1DaGVja2JveCIsImJ0biIsImNoZWNrZWQiLCJwYXltZW50Q29uZmlybUJ0bnMiXSwibWFwcGluZ3MiOiJBQUFBLGNDQUEsV0FFQSxJQUFBQSxFQUFBQyxTQUFBQyxpQkFBQSxzQkFFQSxTQUFBQyxFQUFBSCxHQUNBLElBQUFJLEVBQUFKLEVBQUFLLGNBQUEsU0FPQSxTQUFBQyxFQUFBQyxHQUNBQSxFQUFBQyxpQkFDQUQsRUFBQUUsa0JBYUEsU0FBQUMsRUFBQUgsR0FDQVAsRUFBQVcsVUFBQUMsSUFBQSxhQUdBLFNBQUFDLEVBQUFOLEdBQ0FQLEVBQUFXLFVBQUFHLE9BQUEsYUF4QkEsQ0FBQSxZQUFBLFdBQUEsWUFBQSxRQUFBQyxTQUFBLFNBQUFDLEdBQ0FoQixFQUFBaUIsaUJBQUFELEVBQUFWLEdBQUEsTUFVQSxDQUFBLFlBQUEsWUFBQVMsU0FBQSxTQUFBQyxHQUNBaEIsRUFBQWlCLGlCQUFBRCxFQUFBTixHQUFBLE1BR0EsQ0FBQSxZQUFBLFFBQUFLLFNBQUEsU0FBQUMsR0FDQWhCLEVBQUFpQixpQkFBQUQsRUFBQUgsR0FBQSxNQWFBYixFQUFBaUIsaUJBQUEsUUFFQSxTQUFB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QUFJLE9BQUEsV0FDQUosRUFBQXJCLE1BQUEwQixTQUFBQyxPQUFBQyxjQUNBUCxFQUFBckIsTUFBQTZCLFlBQUEiLCJmaWxlIjoic2NyaXB0Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG4oZnVuY3Rpb24gKCkge1xuICAvL2NvbnN0IGZpbGVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1maWxlX19pbnB1dCcpO1xuICB2YXIgZmlsZURyb3BBcmVhID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlucHV0LWZpbGVfX2xhYmVsJyk7XG5cbiAgZnVuY3Rpb24gbWFrZUZpbGVMb2FkKGZpbGVEcm9wQXJlYSkge1xuICAgIHZhciBmaWxlSW5wdXQgPSBmaWxlRHJvcEFyZWEucXVlcnlTZWxlY3RvcignaW5wdXQnKTsgLy8g0KHQsdGA0LDRgdGL0LLQsNC10Lwg0YHRgtCw0L3QtNCw0YDRgtC90YvQtSDRgdC+0LHRi9GC0LjRjyDQv9GA0Lgg0L/QtdGA0LXRgtCw0YHQutC40LLQsNC90LjQuCDRhNCw0LnQu9CwXG5cbiAgICBbJ2RyYWdlbnRlcicsICdkcmFnb3ZlcicsICdkcmFnbGVhdmUnLCAnZHJvcCddLmZvckVhY2goZnVuY3Rpb24gKGV2ZW50TmFtZSkge1xuICAgICAgZmlsZURyb3BBcmVhLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBwcmV2ZW50RGVmYXVsdHMsIGZhbHNlKTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIHByZXZlbnREZWZhdWx0cyhlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH1cblxuICAgIDsgLy8g0JTQvtCx0LDQstC70Y/QtdC8INGB0YLQuNC70Lgg0L/RgNC4INC/0LXRgNC10YLQsNGB0LrQuNCy0LDQvdC40Lgg0YTQsNC50LvQsCDQvdCw0LQg0L3Rg9C20L3QvtC5INC+0LHQu9Cw0YHRgtGM0Y5cblxuICAgIFsnZHJhZ2VudGVyJywgJ2RyYWdvdmVyJ10uZm9yRWFjaChmdW5jdGlvbiAoZXZlbnROYW1lKSB7XG4gICAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhpZ2hsaWdodCwgZmFsc2UpO1xuICAgIH0pO1xuICAgIFsnZHJhZ2xlYXZlJywgJ2Ryb3AnXS5mb3JFYWNoKGZ1bmN0aW9uIChldmVudE5hbWUpIHtcbiAgICAgIGZpbGVEcm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKGV2ZW50TmFtZSwgdW5oaWdobGlnaHQsIGZhbHNlKTtcbiAgICB9KTtcblxuICAgIGZ1bmN0aW9uIGhpZ2hsaWdodChlKSB7XG4gICAgICBmaWxlRHJvcEFyZWEuY2xhc3NMaXN0LmFkZCgnaGlnaGxpZ2h0Jyk7XG4gICAgfVxuXG4gICAgO1xuXG4gICAgZnVuY3Rpb24gdW5oaWdobGlnaHQoZSkge1xuICAgICAgZmlsZURyb3BBcmVhLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZ2hsaWdodCcpO1xuICAgIH1cblxuICAgIDsgLy9cblxuICAgIGZpbGVEcm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgaGFuZGxlRHJvcCwgZmFsc2UpO1xuXG4gICAgZnVuY3Rpb24gaGFuZGxlRHJvcChlKSB7XG4gICAgICB2YXIgZHQgPSBlLmRhdGFUcmFuc2ZlcjtcbiAgICAgIHZhciBmaWxlcyA9IGR0LmZpbGVzO1xuXG4gICAgICBpZiAoZmlsZUlucHV0LmZpbGVzICYmIGZpbGVJbnB1dC5maWxlc1swXSkge1xuICAgICAgICBmaWxlSW5wdXQudmFsdWUgPSAnJztcblxuICAgICAgICBpZiAoIS9zYWZhcmkvaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7XG4gICAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnJztcbiAgICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBmaWxlSW5wdXQuZmlsZXMgPSBmaWxlcztcbiAgICAgIG9uRmlsZUNoYW5nZSgpOyAvL2hhbmRsZUZpbGVzKGZpbGVzKVxuICAgIH1cblxuICAgIDtcblxuICAgIHZhciBvbkZpbGVDaGFuZ2UgPSBmdW5jdGlvbiBvbkZpbGVDaGFuZ2UoKSB7XG4gICAgICByZWFkVXJsKGZpbGVJbnB1dCk7XG4gICAgfTtcblxuICAgIHZhciByZWFkVXJsID0gZnVuY3Rpb24gcmVhZFVybChpbnB1dCkge1xuICAgICAgaWYgKGlucHV0LmZpbGVzICYmIGlucHV0LmZpbGVzWzBdKSB7XG4gICAgICAgIHZhciByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpOyAvLyByZWFkZXIub25sb2Fkc3RhcnQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAvLyAgIHByb2dyZXNzLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbiAgICAgICAgLy8gfVxuICAgICAgICAvLyByZWFkZXIub25wcm9ncmVzcyA9IGZ1bmN0aW9uIChlKSB7XG4gICAgICAgIC8vICAgY29uc29sZS5sb2coTWF0aC5yb3VuZChlLmxvYWRlZCAvIGUudG90YWwgKiAxMDApKTtcbiAgICAgICAgLy8gICBiYXIuc3R5bGUud2lkdGggPSBNYXRoLnJvdW5kKGUubG9hZGVkIC8gZS50b3RhbCAqIDEwMCkgKyAnJSc7XG4gICAgICAgIC8vIH1cblxuICAgICAgICByZWFkZXIub25sb2FkID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgICAvL2ZpbGVJbWcuc2V0QXR0cmlidXRlKCdzcmMnLCBlLnRhcmdldC5yZXN1bHQpO1xuICAgICAgICAgIC8vdGV4dC50ZXh0Q29udGVudCA9IGlucHV0LmZpbGVzWzBdLm5hbWU7XG4gICAgICAgICAgLy8gIWZpbGVSZXN1bHQuY2xhc3NMaXN0LmNvbnRhaW5zKCdzaG93JykgJiYgZmlsZVJlc3VsdC5jbGFzc0xpc3QuYWRkKCdzaG93Jyk7XG4gICAgICAgICAgZmlsZURyb3BBcmVhLnBhcmVudE5vZGUuY2xhc3NMaXN0LmFkZCgnbG9hZGVkJyk7XG4gICAgICAgICAgZmlsZURyb3BBcmVhLm5leHRFbGVtZW50U2libGluZy5xdWVyeVNlbGVjdG9yKCcuZmlsZS1sb2FkX19uYW1lJykudGV4dENvbnRlbnQgPSBpbnB1dC5maWxlc1swXS5uYW1lOyAvLyBwcm9ncmVzcy5jbGFzc0xpc3QucmVtb3ZlKCdzaG93Jyk7XG4gICAgICAgICAgLy8gYmFyLnN0eWxlLndpZHRoID0gMDtcbiAgICAgICAgfTtcblxuICAgICAgICByZWFkZXIucmVhZEFzRGF0YVVSTChpbnB1dC5maWxlc1swXSk7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkZpbGVDaGFuZ2UpO1xuICB9XG5cbiAgd2luZG93Lm1ha2VGaWxlTG9hZCA9IG1ha2VGaWxlTG9hZDtcblxuICBpZiAoIWZpbGVEcm9wQXJlYVswXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGZpbGVEcm9wQXJlYS5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgbWFrZUZpbGVMb2FkKGl0ZW0pO1xuICB9KTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gIHZhciBkZWxpdmVyeVRpbWVJbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC10aW1lJyk7XG5cbiAgaWYgKCFkZWxpdmVyeVRpbWVJbnB1dHNbMF0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgaW0gPSBuZXcgSW5wdXRtYXNrKFwiOTk6OTlcIik7XG4gIGRlbGl2ZXJ5VGltZUlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgaW0ubWFzayhpdGVtKTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgaW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmlucHV0LXRleHQnKTtcblxuICBpZiAoIWlucHV0c1swXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIGlucHV0cy5mb3JFYWNoKGZ1bmN0aW9uIChpbnB1dCkge1xuICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCBmdW5jdGlvbiAoKSB7XG4gICAgICBpZiAoaW5wdXQudmFsdWUuc3BsaXQoJyAnKS5qb2luKCcnKSA9PT0gJycpIHtcbiAgICAgICAgaW5wdXQudmFsdWUgPSAnJztcbiAgICAgIH1cblxuICAgICAgaWYgKGlucHV0LnZhbHVlICE9PSAnJyAmJiAhaW5wdXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdqcy1pbnB1dGVkJykpIHtcbiAgICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCgnanMtaW5wdXRlZCcpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaW5wdXQudmFsdWUgPT09ICcnICYmIGlucHV0LmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpKSB7XG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgdmggPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjAxO1xuICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tdmgnLCBcIlwiLmNvbmNhdCh2aCwgXCJweFwiKSk7XG4gIHZhciAkYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jKSB7XG4gICAgdmFyIHRpbWVyO1xuICAgIHJldHVybiBmdW5jdGlvbiAoZXZlbnQpIHtcbiAgICAgIGlmICh0aW1lcikgY2xlYXJUaW1lb3V0KHRpbWVyKTtcbiAgICAgIHRpbWVyID0gc2V0VGltZW91dChmdW5jLCAxMDAsIGV2ZW50KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gTW9kYWwodHJpZ2dlciwgbW9kYWwpIHtcbiAgICB0aGlzLnRyaWdnZXIgPSB0cmlnZ2VyO1xuICAgIHRoaXMubW9kYWwgPSBtb2RhbDtcbiAgICB0aGlzLm92ZXJsYXkgPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fb3ZlcmxheScpO1xuICAgIHRoaXMuY2xvc2VCdG4gPSB0aGlzLm1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fY2xvc2UnKTtcbiAgICB0aGlzLm9uT3ZlcmxheUNsaWNrID0gdGhpcy5vbk92ZXJsYXlDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DbG9zZUNsaWNrID0gdGhpcy5vbkNsb3NlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uVHJpZ2dlckNsaWNrID0gdGhpcy5vblRyaWdnZXJDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25SZXNpemUgPSB0aGlzLm9uUmVzaXplLmJpbmQodGhpcyk7XG4gICAgdGhpcy5hZGRFdmVudExpc3RlbmVycygpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLm9wZW4gPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QuYWRkKCdqcy1zaG93Jyk7XG4gICAgJGJvZHkuY2xhc3NMaXN0LmFkZCgnanNfX2JvZHktbm8tc2Nyb2xsJyk7XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LnJlbW92ZSgnanMtc2hvdycpO1xuICAgICRib2R5LmNsYXNzTGlzdC5yZW1vdmUoJ2pzX19ib2R5LW5vLXNjcm9sbCcpO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5vbk92ZXJsYXlDbGljayA9IGZ1bmN0aW9uIChlKSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uQ2xvc2VDbGljayA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmNsb3NlKCk7XG4gIH07XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uVHJpZ2dlckNsaWNrID0gZnVuY3Rpb24gKCkge1xuICAgIHRoaXMub3BlbigpO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5vblJlc2l6ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdmggPSB3aW5kb3cuaW5uZXJIZWlnaHQgKiAwLjAxO1xuICAgIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zdHlsZS5zZXRQcm9wZXJ0eSgnLS12aCcsIFwiXCIuY29uY2F0KHZoLCBcInB4XCIpKTtcbiAgfTtcblxuICBNb2RhbC5wcm90b3R5cGUuYWRkRXZlbnRMaXN0ZW5lcnMgPSBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5vdmVybGF5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbk92ZXJsYXlDbGljayk7XG4gICAgdGhpcy5jbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25DbG9zZUNsaWNrKTtcbiAgICB0aGlzLnRyaWdnZXIuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uVHJpZ2dlckNsaWNrKTtcbiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgZGVib3VuY2UodGhpcy5vblJlc2l6ZSkpO1xuICB9O1xuXG4gIHdpbmRvdy5Nb2RhbCA9IE1vZGFsO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlYXJjaCcpO1xuICB2YXIgY2xvc2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc2VhcmNoICsgLnNlYXJjaC1jbG9zZScpO1xuXG4gIGlmICghaXRlbXNbMF0pIHtcbiAgICByZXR1cm47XG4gIH0gLy8gaXRlbXMuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAvLyAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCAoKSA9PntcbiAgLy8gICAgIGl0ZW0ucGFyZW50Tm9kZS5wYXJlbnROb2RlLmNsYXNzTGlzdC5hZGQoJ2pzLWZvY3VzJyk7XG4gIC8vICAgfSk7XG4gIC8vIH0pO1xuXG5cbiAgaXRlbXMuZm9yRWFjaChmdW5jdGlvbiAoaXRlbSkge1xuICAgIGl0ZW0uYWRkRXZlbnRMaXN0ZW5lcignYmx1cicsIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmIChpdGVtLnZhbHVlLnNwbGl0KCcgJykuam9pbignJykgPT09ICcnKSB7XG4gICAgICAgIGl0ZW0udmFsdWUgPSAnJztcbiAgICAgIH1cblxuICAgICAgaWYgKGl0ZW0udmFsdWUgIT09ICcnICYmICFpdGVtLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpKSB7XG4gICAgICAgIGl0ZW0uY2xhc3NMaXN0LmFkZCgnanMtaW5wdXRlZCcpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbS52YWx1ZSA9PT0gJycgJiYgaXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ2pzLWlucHV0ZWQnKSkge1xuICAgICAgICBpdGVtLmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG4gIGNsb3NlLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIHNlYXJjaCA9IGl0ZW0ucHJldmlvdXNFbGVtZW50U2libGluZztcbiAgICAgIHNlYXJjaC52YWx1ZSA9ICcnO1xuXG4gICAgICBpZiAoc2VhcmNoLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpKSB7XG4gICAgICAgIHNlYXJjaC5jbGFzc0xpc3QucmVtb3ZlKCdqcy1pbnB1dGVkJyk7XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgJCgnLnNlbGVjdCcpLnNlbGVjdDIoKTtcbiAgJCgnLnNlbGVjdCcpLm9uKCdzZWxlY3QyOnNlbGVjdCcsIGZ1bmN0aW9uIChlKSB7XG4gICAgJCh0aGlzKS5hZGRDbGFzcygncGlja2VkJyk7XG4gIH0pO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgJCgnLmNvbnRyYWN0LWluZm9fX2RlbGl2ZXJlZC10b2dnbGUnKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgY29udHJhY3RzQWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyYWN0cy1hbGwnKTtcblxuICBpZiAoIWNvbnRyYWN0c0FsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gICQoJy5kYXRlLWlucHV0JykuZGF0ZXBpY2tlcigpO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgdmFyIGRlbGl2ZXJ5QnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kZWxpdmVyLW9yLXBpY2t1cF9fY29uZmlybS1idG4nKTtcblxuICBpZiAoIWRlbGl2ZXJ5QnRuc1swXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gICQoJyNkZWxpdmVyeS1kYXRlJykuZGF0ZXBpY2tlcigpO1xuICB2YXIgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbCcpO1xuICB2YXIgY2xvc2UgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Nsb3NlJyk7XG4gIHZhciBmaWxlSW5wdXRCbG9jayA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5kZWxpdmVyeS1vci1waWNrdXBfX21vZGFsLWlucHV0LWZpbGUnKTtcbiAgdmFyIGZpbGVJbnB1dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1maWxlX19pbnB1dCcpO1xuICB2YXIgZGF0ZUlucHV0ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmRlbGl2ZXJ5LW9yLXBpY2t1cF9fbW9kYWwtdGltZScpO1xuICB2YXIgdGltZUlucHV0ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmRlbGl2ZXJ5LW9yLXBpY2t1cF9fbW9kYWwtdGltZScpO1xuICB2YXIgY29uZmlybUNoZWNrYm94ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmNoZWNrYm94X19pbnB1dCcpO1xuICBkZWxpdmVyeUJ0bnMuZm9yRWFjaChmdW5jdGlvbiAoYnRuKSB7XG4gICAgbmV3IE1vZGFsKGJ0biwgbW9kYWwpO1xuICB9KTtcblxuICB2YXIgb25DbG9zZUNsaWNrID0gZnVuY3Rpb24gb25DbG9zZUNsaWNrKCkge1xuICAgIGlmIChmaWxlSW5wdXRCbG9jay5jbGFzc0xpc3QuY29udGFpbnMoJ2xvYWRlZCcpKSB7XG4gICAgICBmaWxlSW5wdXRCbG9jay5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkZWQnKTtcbiAgICAgIGRhdGVJbnB1dC52YWx1ZSA9ICcnO1xuICAgICAgdGltZUlucHV0LnZhbHVlID0gJyc7XG4gICAgICBjb25maXJtQ2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgICAgJCgnI2RlbGl2ZXJ5LWRhdGUnKS5kYXRlcGlja2VyKCdzZXREYXRlJywgJycpO1xuICAgICAgZmlsZUlucHV0LnZhbHVlID0gJyc7XG5cbiAgICAgIGlmICghL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpIHtcbiAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnJztcbiAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnZmlsZSc7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIGNsb3NlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgb25DbG9zZUNsaWNrKTtcbn0pKCk7XG5cbihmdW5jdGlvbiAoKSB7XG4gICQoJy5maWx0ZXJzX19idG4nKS5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgJCh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcbiAgfSk7XG59KSgpO1xuXG4oZnVuY3Rpb24gKCkge1xuICB2YXIgcGF5bWVudENvbmZpcm1CdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnBheW1lbnQtd2FpdGluZ19fY29uZmlybS1idG4nKTtcblxuICBpZiAoIXBheW1lbnRDb25maXJtQnRuc1swXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gICQoJyNkZWxpdmVyeS1kYXRlJykuZGF0ZXBpY2tlcigpO1xuICB2YXIgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGF5bWVudC13YWl0aW5nX19tb2RhbCcpO1xuICB2YXIgY2xvc2UgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Nsb3NlJyk7IC8vIGNvbnN0IGZpbGVJbnB1dEJsb2NrID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmRlbGl2ZXJ5LW9yLXBpY2t1cF9fbW9kYWwtaW5wdXQtZmlsZScpO1xuICAvLyBjb25zdCBmaWxlSW5wdXQgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuaW5wdXQtZmlsZV9faW5wdXQnKTtcbiAgLy8gY29uc3QgZGF0ZUlucHV0ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmRlbGl2ZXJ5LW9yLXBpY2t1cF9fbW9kYWwtdGltZScpO1xuICAvLyBjb25zdCB0aW1lSW5wdXQgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC10aW1lJyk7XG4gIC8vIGNvbnN0IGNvbmZpcm1DaGVja2JveCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5jaGVja2JveF9faW5wdXQnKTtcblxuICBwYXltZW50Q29uZmlybUJ0bnMuZm9yRWFjaChmdW5jdGlvbiAoYnRuKSB7XG4gICAgbmV3IE1vZGFsKGJ0biwgbW9kYWwpO1xuICB9KTtcblxuICB2YXIgb25DbG9zZUNsaWNrID0gZnVuY3Rpb24gb25DbG9zZUNsaWNrKCkgey8vIGlmIChmaWxlSW5wdXRCbG9jay5jbGFzc0xpc3QuY29udGFpbnMoJ2xvYWRlZCcpKSB7XG4gICAgLy8gICBmaWxlSW5wdXRCbG9jay5jbGFzc0xpc3QucmVtb3ZlKCdsb2FkZWQnKTtcbiAgICAvLyAgIGRhdGVJbnB1dC52YWx1ZSA9ICcnO1xuICAgIC8vICAgdGltZUlucHV0LnZhbHVlID0gJyc7XG4gICAgLy8gICBjb25maXJtQ2hlY2tib3guY2hlY2tlZCA9IGZhbHNlO1xuICAgIC8vICAgJCgnI2RlbGl2ZXJ5LWRhdGUnKS5kYXRlcGlja2VyKCdzZXREYXRlJywgJycpO1xuICAgIC8vICAgZmlsZUlucHV0LnZhbHVlID0gJyc7XG4gICAgLy8gICBpZighL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe1xuICAgIC8vICAgICBmaWxlSW5wdXQudHlwZSA9ICcnO1xuICAgIC8vICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAvLyAgIH1cbiAgICAvLyB9XG4gIH07XG5cbiAgY2xvc2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbkNsb3NlQ2xpY2spO1xufSkoKTtcblxuKGZ1bmN0aW9uICgpIHtcbiAgJCgnLnN1cHBvcnRfX2RvY3MtYnRuJykuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICQodGhpcykucGFyZW50KCkubmV4dCgpLnNsaWRlVG9nZ2xlKCk7XG4gICAgJCh0aGlzKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pO1xufSkoKTsiLCIoZnVuY3Rpb24oKSB7XG4gIC8vY29uc3QgZmlsZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmlucHV0LWZpbGVfX2lucHV0Jyk7XG4gIGNvbnN0IGZpbGVEcm9wQXJlYSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5pbnB1dC1maWxlX19sYWJlbCcpO1xuXG4gIGZ1bmN0aW9uIG1ha2VGaWxlTG9hZChmaWxlRHJvcEFyZWEpIHtcbiAgICBjb25zdCBmaWxlSW5wdXQgPSBmaWxlRHJvcEFyZWEucXVlcnlTZWxlY3RvcignaW5wdXQnKTtcbiAgICAvLyDQodCx0YDQsNGB0YvQstCw0LXQvCDRgdGC0LDQvdC00LDRgNGC0L3Ri9C1INGB0L7QsdGL0YLQuNGPINC/0YDQuCDQv9C10YDQtdGC0LDRgdC60LjQstCw0L3QuNC4INGE0LDQudC70LBcblxuICAgIFsnZHJhZ2VudGVyJywgJ2RyYWdvdmVyJywgJ2RyYWdsZWF2ZScsICdkcm9wJ10uZm9yRWFjaChldmVudE5hbWUgPT4ge1xuICAgICAgZmlsZURyb3BBcmVhLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBwcmV2ZW50RGVmYXVsdHMsIGZhbHNlKVxuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gcHJldmVudERlZmF1bHRzIChlKSB7XG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuICAgIH07XG5cbiAgICAvLyDQlNC+0LHQsNCy0LvRj9C10Lwg0YHRgtC40LvQuCDQv9GA0Lgg0L/QtdGA0LXRgtCw0YHQutC40LLQsNC90LjQuCDRhNCw0LnQu9CwINC90LDQtCDQvdGD0LbQvdC+0Lkg0L7QsdC70LDRgdGC0YzRjlxuXG4gICAgWydkcmFnZW50ZXInLCAnZHJhZ292ZXInXS5mb3JFYWNoKGV2ZW50TmFtZSA9PiB7XG4gICAgICBmaWxlRHJvcEFyZWEuYWRkRXZlbnRMaXN0ZW5lcihldmVudE5hbWUsIGhpZ2hsaWdodCwgZmFsc2UpXG4gICAgfSk7XG5cbiAgICBbJ2RyYWdsZWF2ZScsICdkcm9wJ10uZm9yRWFjaChldmVudE5hbWUgPT4ge1xuICAgICAgZmlsZURyb3BBcmVhLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCB1bmhpZ2hsaWdodCwgZmFsc2UpXG4gICAgfSlcblxuICAgIGZ1bmN0aW9uIGhpZ2hsaWdodChlKSB7XG4gICAgICBmaWxlRHJvcEFyZWEuY2xhc3NMaXN0LmFkZCgnaGlnaGxpZ2h0Jyk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIHVuaGlnaGxpZ2h0KGUpIHtcbiAgICAgIGZpbGVEcm9wQXJlYS5jbGFzc0xpc3QucmVtb3ZlKCdoaWdobGlnaHQnKTtcbiAgICB9O1xuXG4gICAgLy9cblxuICAgIGZpbGVEcm9wQXJlYS5hZGRFdmVudExpc3RlbmVyKCdkcm9wJywgaGFuZGxlRHJvcCwgZmFsc2UpXG5cbiAgICBmdW5jdGlvbiBoYW5kbGVEcm9wKGUpIHtcbiAgICAgIGxldCBkdCA9IGUuZGF0YVRyYW5zZmVyXG4gICAgICBsZXQgZmlsZXMgPSBkdC5maWxlc1xuXG4gICAgICBpZiAoZmlsZUlucHV0LmZpbGVzICYmIGZpbGVJbnB1dC5maWxlc1swXSkge1xuICAgICAgICBmaWxlSW5wdXQudmFsdWUgPSAnJztcblxuICAgICAgICBpZighL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe1xuICAgICAgICAgIGZpbGVJbnB1dC50eXBlID0gJyc7XG4gICAgICAgICAgZmlsZUlucHV0LnR5cGUgPSAnZmlsZSc7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgZmlsZUlucHV0LmZpbGVzID0gZmlsZXM7XG4gICAgICBvbkZpbGVDaGFuZ2UoKTtcblxuICAgICAgLy9oYW5kbGVGaWxlcyhmaWxlcylcbiAgICB9O1xuXG4gICAgY29uc3Qgb25GaWxlQ2hhbmdlID0gKCkgPT4ge1xuICAgICAgcmVhZFVybChmaWxlSW5wdXQpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlYWRVcmwgPSAoaW5wdXQpID0+IHtcbiAgICAgIGlmIChpbnB1dC5maWxlcyAmJiBpbnB1dC5maWxlc1swXSkge1xuICAgICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuICAgICAgICAvLyByZWFkZXIub25sb2Fkc3RhcnQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAvLyAgIHByb2dyZXNzLmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbiAgICAgICAgLy8gfVxuXG4gICAgICAgIC8vIHJlYWRlci5vbnByb2dyZXNzID0gZnVuY3Rpb24gKGUpIHtcbiAgICAgICAgLy8gICBjb25zb2xlLmxvZyhNYXRoLnJvdW5kKGUubG9hZGVkIC8gZS50b3RhbCAqIDEwMCkpO1xuICAgICAgICAvLyAgIGJhci5zdHlsZS53aWR0aCA9IE1hdGgucm91bmQoZS5sb2FkZWQgLyBlLnRvdGFsICogMTAwKSArICclJztcbiAgICAgICAgLy8gfVxuXG4gICAgICAgIHJlYWRlci5vbmxvYWQgPSBmdW5jdGlvbiAoZSkge1xuICAgICAgICAgIC8vZmlsZUltZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIGUudGFyZ2V0LnJlc3VsdCk7XG4gICAgICAgICAgLy90ZXh0LnRleHRDb250ZW50ID0gaW5wdXQuZmlsZXNbMF0ubmFtZTtcbiAgICAgICAgICAvLyAhZmlsZVJlc3VsdC5jbGFzc0xpc3QuY29udGFpbnMoJ3Nob3cnKSAmJiBmaWxlUmVzdWx0LmNsYXNzTGlzdC5hZGQoJ3Nob3cnKTtcbiAgICAgICAgICBmaWxlRHJvcEFyZWEucGFyZW50Tm9kZS5jbGFzc0xpc3QuYWRkKCdsb2FkZWQnKTtcbiAgICAgICAgICBmaWxlRHJvcEFyZWFcbiAgICAgICAgICAgIC5uZXh0RWxlbWVudFNpYmxpbmdcbiAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCcuZmlsZS1sb2FkX19uYW1lJylcbiAgICAgICAgICAgIC50ZXh0Q29udGVudCA9IGlucHV0LmZpbGVzWzBdLm5hbWU7XG4gICAgICAgICAgLy8gcHJvZ3Jlc3MuY2xhc3NMaXN0LnJlbW92ZSgnc2hvdycpO1xuICAgICAgICAgIC8vIGJhci5zdHlsZS53aWR0aCA9IDA7XG5cblxuICAgICAgICB9XG5cbiAgICAgICAgcmVhZGVyLnJlYWRBc0RhdGFVUkwoaW5wdXQuZmlsZXNbMF0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZpbGVJbnB1dC5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCBvbkZpbGVDaGFuZ2UpO1xuICB9XG5cbiAgd2luZG93Lm1ha2VGaWxlTG9hZCA9IG1ha2VGaWxlTG9hZDtcblxuXG4gIGlmICghZmlsZURyb3BBcmVhWzBdKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgZmlsZURyb3BBcmVhLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgIG1ha2VGaWxlTG9hZChpdGVtKTtcbiAgfSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBjb25zdCBkZWxpdmVyeVRpbWVJbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC10aW1lJyk7XG5cbiAgaWYgKCFkZWxpdmVyeVRpbWVJbnB1dHNbMF0pIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB2YXIgaW0gPSBuZXcgSW5wdXRtYXNrKFwiOTk6OTlcIik7XG5cbiAgZGVsaXZlcnlUaW1lSW5wdXRzLmZvckVhY2goZnVuY3Rpb24oaXRlbSkge1xuICAgIGltLm1hc2soaXRlbSk7XG4gIH0pO1xuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBjb25zdCBpbnB1dHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuaW5wdXQtdGV4dCcpO1xuXG4gIGlmICghaW5wdXRzWzBdKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaW5wdXRzLmZvckVhY2goZnVuY3Rpb24oaW5wdXQpIHtcbiAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoXG4gICAgICAgIGlucHV0LnZhbHVlLnNwbGl0KCcgJykuam9pbignJykgPT09ICcnXG4gICAgICApIHtcbiAgICAgICAgaW5wdXQudmFsdWUgPSAnJztcbiAgICAgIH1cblxuICAgICAgaWYgKFxuICAgICAgICBpbnB1dC52YWx1ZSAhPT0gJydcbiAgICAgICAgJiYgIWlucHV0LmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpXG4gICAgICApIHtcbiAgICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZCgnanMtaW5wdXRlZCcpO1xuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIGlucHV0LnZhbHVlID09PSAnJ1xuICAgICAgICAmJiBpbnB1dC5jbGFzc0xpc3QuY29udGFpbnMoJ2pzLWlucHV0ZWQnKVxuICAgICAgKSB7XG4gICAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUoJ2pzLWlucHV0ZWQnKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KSgpO1xuIiwiKCgpID0+IHtcbiAgbGV0IHZoID0gd2luZG93LmlubmVySGVpZ2h0ICogMC4wMTtcbiAgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnN0eWxlLnNldFByb3BlcnR5KCctLXZoJywgYCR7dmh9cHhgKTtcblxuICBjb25zdCAkYm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2JvZHknKTtcblxuICBmdW5jdGlvbiBkZWJvdW5jZShmdW5jKXtcbiAgICB2YXIgdGltZXI7XG4gICAgcmV0dXJuIGZ1bmN0aW9uKGV2ZW50KXtcbiAgICAgIGlmKHRpbWVyKSBjbGVhclRpbWVvdXQodGltZXIpO1xuICAgICAgdGltZXIgPSBzZXRUaW1lb3V0KGZ1bmMsMTAwLGV2ZW50KTtcbiAgICB9O1xuICB9XG5cbiAgZnVuY3Rpb24gTW9kYWwgKHRyaWdnZXIsIG1vZGFsKSB7XG4gICAgdGhpcy50cmlnZ2VyID0gdHJpZ2dlcjtcbiAgICB0aGlzLm1vZGFsID0gbW9kYWw7XG4gICAgdGhpcy5vdmVybGF5ID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX292ZXJsYXknKTtcbiAgICB0aGlzLmNsb3NlQnRuID0gdGhpcy5tb2RhbC5xdWVyeVNlbGVjdG9yKCcubW9kYWxfX2Nsb3NlJyk7XG5cbiAgICB0aGlzLm9uT3ZlcmxheUNsaWNrID0gdGhpcy5vbk92ZXJsYXlDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25DbG9zZUNsaWNrID0gdGhpcy5vbkNsb3NlQ2xpY2suYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uVHJpZ2dlckNsaWNrID0gdGhpcy5vblRyaWdnZXJDbGljay5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25SZXNpemUgPSB0aGlzLm9uUmVzaXplLmJpbmQodGhpcyk7XG5cbiAgICB0aGlzLmFkZEV2ZW50TGlzdGVuZXJzKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub3BlbiA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubW9kYWwuY2xhc3NMaXN0LmFkZCgnanMtc2hvdycpO1xuICAgICRib2R5LmNsYXNzTGlzdC5hZGQoJ2pzX19ib2R5LW5vLXNjcm9sbCcpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLmNsb3NlID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5tb2RhbC5jbGFzc0xpc3QucmVtb3ZlKCdqcy1zaG93Jyk7XG4gICAgJGJvZHkuY2xhc3NMaXN0LnJlbW92ZSgnanNfX2JvZHktbm8tc2Nyb2xsJyk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25PdmVybGF5Q2xpY2sgPSBmdW5jdGlvbihlKSB7XG4gICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXkpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25DbG9zZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5jbG9zZSgpO1xuICB9XG5cbiAgTW9kYWwucHJvdG90eXBlLm9uVHJpZ2dlckNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5vcGVuKCk7XG4gIH1cblxuICBNb2RhbC5wcm90b3R5cGUub25SZXNpemUgPSBmdW5jdGlvbigpIHtcbiAgICAgIGxldCB2aCA9IHdpbmRvdy5pbm5lckhlaWdodCAqIDAuMDE7XG4gICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUuc2V0UHJvcGVydHkoJy0tdmgnLCBgJHt2aH1weGApO1xuICB9O1xuXG4gIE1vZGFsLnByb3RvdHlwZS5hZGRFdmVudExpc3RlbmVycyA9IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMub3ZlcmxheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMub25PdmVybGF5Q2xpY2spO1xuICAgIHRoaXMuY2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uQ2xvc2VDbGljayk7XG4gICAgdGhpcy50cmlnZ2VyLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vblRyaWdnZXJDbGljayk7XG4gICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGRlYm91bmNlKHRoaXMub25SZXNpemUpKTtcbiAgfVxuXG4gIHdpbmRvdy5Nb2RhbCA9IE1vZGFsO1xufSkoKTtcbiIsIigoKSA9PiB7XG4gIGNvbnN0IGl0ZW1zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnNlYXJjaCcpO1xuICBjb25zdCBjbG9zZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5zZWFyY2ggKyAuc2VhcmNoLWNsb3NlJyk7XG5cbiAgaWYgKCFpdGVtc1swXSkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8vIGl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgLy8gICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgKCkgPT57XG4gIC8vICAgICBpdGVtLnBhcmVudE5vZGUucGFyZW50Tm9kZS5jbGFzc0xpc3QuYWRkKCdqcy1mb2N1cycpO1xuICAvLyAgIH0pO1xuICAvLyB9KTtcblxuICBpdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgaXRlbS5hZGRFdmVudExpc3RlbmVyKCdibHVyJywgKCkgPT4ge1xuICAgICAgaWYgKFxuICAgICAgICBpdGVtLnZhbHVlLnNwbGl0KCcgJykuam9pbignJykgPT09ICcnXG4gICAgICApIHtcbiAgICAgICAgaXRlbS52YWx1ZSA9ICcnO1xuICAgICAgfVxuXG4gICAgICBpZiAoXG4gICAgICAgIGl0ZW0udmFsdWUgIT09ICcnXG4gICAgICAgICYmICFpdGVtLmNsYXNzTGlzdC5jb250YWlucygnanMtaW5wdXRlZCcpXG4gICAgICApIHtcbiAgICAgICAgaXRlbS5jbGFzc0xpc3QuYWRkKCdqcy1pbnB1dGVkJyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChcbiAgICAgICAgaXRlbS52YWx1ZSA9PT0gJydcbiAgICAgICAgJiYgaXRlbS5jbGFzc0xpc3QuY29udGFpbnMoJ2pzLWlucHV0ZWQnKVxuICAgICAgKSB7XG4gICAgICAgIGl0ZW0uY2xhc3NMaXN0LnJlbW92ZSgnanMtaW5wdXRlZCcpO1xuICAgICAgfVxuICAgIH0pXG4gIH0pO1xuXG4gIGNsb3NlLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgY29uc3Qgc2VhcmNoID0gaXRlbS5wcmV2aW91c0VsZW1lbnRTaWJsaW5nO1xuICAgICAgc2VhcmNoLnZhbHVlID0gJyc7XG4gICAgICBpZiAoXG4gICAgICAgIHNlYXJjaC5jbGFzc0xpc3QuY29udGFpbnMoJ2pzLWlucHV0ZWQnKVxuICAgICAgKSB7XG4gICAgICAgIHNlYXJjaC5jbGFzc0xpc3QucmVtb3ZlKCdqcy1pbnB1dGVkJyk7XG4gICAgICB9XG4gICAgfSlcbiAgfSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAkKCcuc2VsZWN0Jykuc2VsZWN0MigpO1xuICAkKCcuc2VsZWN0Jykub24oJ3NlbGVjdDI6c2VsZWN0JywgZnVuY3Rpb24gKGUpIHtcbiAgICAkKHRoaXMpLmFkZENsYXNzKCdwaWNrZWQnKTtcbn0pO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcblxuICAkKCcuY29udHJhY3QtaW5mb19fZGVsaXZlcmVkLXRvZ2dsZScpLmNsaWNrKGZ1bmN0aW9uKCkge1xuICAgICQodGhpcykucGFyZW50KCkubmV4dCgpLnNsaWRlVG9nZ2xlKCk7XG4gICAgJCh0aGlzKS50b2dnbGVDbGFzcygnb3BlbmVkJyk7XG4gIH0pO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgY29uc3QgY29udHJhY3RzQWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmNvbnRyYWN0cy1hbGwnKTtcblxuICBpZiAoIWNvbnRyYWN0c0FsbCkge1xuICAgIHJldHVybjtcbiAgfVxuXG4gICQoJy5kYXRlLWlucHV0JykuZGF0ZXBpY2tlcigpO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgY29uc3QgZGVsaXZlcnlCdG5zID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmRlbGl2ZXItb3ItcGlja3VwX19jb25maXJtLWJ0bicpO1xuXG4gIGlmICghZGVsaXZlcnlCdG5zWzBdKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgJCgnI2RlbGl2ZXJ5LWRhdGUnKS5kYXRlcGlja2VyKCk7XG5cbiAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbCcpO1xuICBjb25zdCBjbG9zZSA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fY2xvc2UnKTtcbiAgY29uc3QgZmlsZUlucHV0QmxvY2sgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC1pbnB1dC1maWxlJyk7XG4gIGNvbnN0IGZpbGVJbnB1dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1maWxlX19pbnB1dCcpO1xuICBjb25zdCBkYXRlSW5wdXQgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC10aW1lJyk7XG4gIGNvbnN0IHRpbWVJbnB1dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5kZWxpdmVyeS1vci1waWNrdXBfX21vZGFsLXRpbWUnKTtcbiAgY29uc3QgY29uZmlybUNoZWNrYm94ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmNoZWNrYm94X19pbnB1dCcpO1xuXG4gIGRlbGl2ZXJ5QnRucy5mb3JFYWNoKGZ1bmN0aW9uKGJ0bikge1xuICAgIG5ldyBNb2RhbChidG4sIG1vZGFsKTtcbiAgfSk7XG5cbiAgY29uc3Qgb25DbG9zZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgaWYgKGZpbGVJbnB1dEJsb2NrLmNsYXNzTGlzdC5jb250YWlucygnbG9hZGVkJykpIHtcbiAgICAgIGZpbGVJbnB1dEJsb2NrLmNsYXNzTGlzdC5yZW1vdmUoJ2xvYWRlZCcpO1xuICAgICAgZGF0ZUlucHV0LnZhbHVlID0gJyc7XG4gICAgICB0aW1lSW5wdXQudmFsdWUgPSAnJztcbiAgICAgIGNvbmZpcm1DaGVja2JveC5jaGVja2VkID0gZmFsc2U7XG4gICAgICAkKCcjZGVsaXZlcnktZGF0ZScpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCAnJyk7XG5cbiAgICAgIGZpbGVJbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgICBpZighL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe1xuICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICcnO1xuICAgICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xvc2VDbGljayk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAkKCcuZmlsdGVyc19fYnRuJykuY2xpY2soZnVuY3Rpb24oKSB7XG4gICAgJCh0aGlzKS5wYXJlbnQoKS5uZXh0KCkuc2xpZGVUb2dnbGUoKTtcbiAgICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdvcGVuZWQnKTtcbiAgfSk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICBjb25zdCBwYXltZW50Q29uZmlybUJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcucGF5bWVudC13YWl0aW5nX19jb25maXJtLWJ0bicpO1xuXG4gIGlmICghcGF5bWVudENvbmZpcm1CdG5zWzBdKSB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgJCgnI2RlbGl2ZXJ5LWRhdGUnKS5kYXRlcGlja2VyKCk7XG5cbiAgY29uc3QgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncGF5bWVudC13YWl0aW5nX19tb2RhbCcpO1xuICBjb25zdCBjbG9zZSA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbF9fY2xvc2UnKTtcbiAgLy8gY29uc3QgZmlsZUlucHV0QmxvY2sgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC1pbnB1dC1maWxlJyk7XG4gIC8vIGNvbnN0IGZpbGVJbnB1dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1maWxlX19pbnB1dCcpO1xuICAvLyBjb25zdCBkYXRlSW5wdXQgPSBtb2RhbC5xdWVyeVNlbGVjdG9yKCcuZGVsaXZlcnktb3ItcGlja3VwX19tb2RhbC10aW1lJyk7XG4gIC8vIGNvbnN0IHRpbWVJbnB1dCA9IG1vZGFsLnF1ZXJ5U2VsZWN0b3IoJy5kZWxpdmVyeS1vci1waWNrdXBfX21vZGFsLXRpbWUnKTtcbiAgLy8gY29uc3QgY29uZmlybUNoZWNrYm94ID0gbW9kYWwucXVlcnlTZWxlY3RvcignLmNoZWNrYm94X19pbnB1dCcpO1xuXG4gIHBheW1lbnRDb25maXJtQnRucy5mb3JFYWNoKGZ1bmN0aW9uKGJ0bikge1xuICAgIG5ldyBNb2RhbChidG4sIG1vZGFsKTtcbiAgfSk7XG5cbiAgY29uc3Qgb25DbG9zZUNsaWNrID0gZnVuY3Rpb24oKSB7XG4gICAgLy8gaWYgKGZpbGVJbnB1dEJsb2NrLmNsYXNzTGlzdC5jb250YWlucygnbG9hZGVkJykpIHtcbiAgICAvLyAgIGZpbGVJbnB1dEJsb2NrLmNsYXNzTGlzdC5yZW1vdmUoJ2xvYWRlZCcpO1xuICAgIC8vICAgZGF0ZUlucHV0LnZhbHVlID0gJyc7XG4gICAgLy8gICB0aW1lSW5wdXQudmFsdWUgPSAnJztcbiAgICAvLyAgIGNvbmZpcm1DaGVja2JveC5jaGVja2VkID0gZmFsc2U7XG4gICAgLy8gICAkKCcjZGVsaXZlcnktZGF0ZScpLmRhdGVwaWNrZXIoJ3NldERhdGUnLCAnJyk7XG5cbiAgICAvLyAgIGZpbGVJbnB1dC52YWx1ZSA9ICcnO1xuXG4gICAgLy8gICBpZighL3NhZmFyaS9pLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe1xuICAgIC8vICAgICBmaWxlSW5wdXQudHlwZSA9ICcnO1xuICAgIC8vICAgICBmaWxlSW5wdXQudHlwZSA9ICdmaWxlJztcbiAgICAvLyAgIH1cbiAgICAvLyB9XG4gIH1cblxuICBjbG9zZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG9uQ2xvc2VDbGljayk7XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAkKCcuc3VwcG9ydF9fZG9jcy1idG4nKS5jbGljayhmdW5jdGlvbigpIHtcbiAgICAkKHRoaXMpLnBhcmVudCgpLm5leHQoKS5zbGlkZVRvZ2dsZSgpO1xuICAgICQodGhpcykudG9nZ2xlQ2xhc3MoJ29wZW5lZCcpO1xuICB9KVxufSkoKTtcbiJdfQ==
