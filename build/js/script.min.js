"use strict";!function(){var e=document.querySelectorAll(".checkbox-2__input");e[0]&&e.forEach((function(e){e.addEventListener("change",(function(e){var t=e.target;!0===t.checked?t.parentNode.classList.add("checked"):t.parentNode.classList.remove("checked")}))}))}(),$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input"),n=e.parentNode.querySelector(".file-load__clear");function a(e){e.preventDefault(),e.stopPropagation()}function i(t){e.classList.add("highlight")}function o(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,a,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,o,!1)})),e.addEventListener("drop",(function(e){var n=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=n,c()}),!1);var c=function(){r(t)},r=function(t){if(t.files&&t.files[0]){var n=new FileReader;n.onload=function(n){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name},n.readAsDataURL(t.files[0])}};t.addEventListener("change",c),n.addEventListener("click",(function(){e.parentNode.classList.remove("loaded"),t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file")}))}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=document.querySelectorAll(".input-text");e[0]&&e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t=document.querySelector("body");function n(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.onResize=this.onResize.bind(this),this.addEventListeners()}n.prototype.open=function(){this.modal.classList.add("js-show"),t.classList.add("js__body-no-scroll")},n.prototype.close=function(){this.modal.classList.remove("js-show"),t.classList.remove("js__body-no-scroll")},n.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},n.prototype.onCloseClick=function(){this.close()},n.prototype.onTriggerClick=function(){this.open()},n.prototype.onResize=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},n.prototype.addEventListeners=function(){var e,t;this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick),window.addEventListener("resize",(e=this.onResize,function(n){t&&clearTimeout(t),t=setTimeout(e,100,n)}))},window.Modal=n}(),$(".input-money").mask("# ##0 ₽",{reverse:!0}),function(){var e=document.querySelectorAll(".input-phone");if(e[0]){var t=new Inputmask("+7(999) 999-99-99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e[0]&&(e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))})))}(),function(){function e(e){var t=e.text.split("splitter");return t.length>1?$("<span>"+t[0]+"</span><span>"+t[1]+"</span>"):e.text}$(".select").select2({templateResult:e,templateSelection:e}),$(".select").on("select2:select",(function(e){$(this).addClass("picked")}))}(),function(){var e=document.querySelectorAll(".delivery-or-pickup__modal-time");if(e[0]){var t=new Inputmask("99:99");e.forEach((function(e){t.mask(e)}))}}(),$(".agents__users-btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".contract-info__cancellation");if(e[0]){var t=document.getElementById("cancellation__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.querySelectorAll(".contract-creation__client-type  input");if(e[0]){var t=document.querySelector(".contract-creation__details");e.forEach((function(e){e.addEventListener("change",n)}))}function n(){e[0].checked&&t.classList.remove("show-for-entity"),e[1].checked&&t.classList.add("show-for-entity")}}(),$(".delivery-or-pickup.done").click((function(){$(this).find(".contract-info__delivered-adress").slideToggle(),$(this).find(".contract-info__delivered-toggle").toggleClass("opened")})),function(){if(document.querySelector(".contract-services")){var e=document.querySelectorAll(".contract-services__link"),t=function(e){var t=e.target;(t.classList.contains("checkbox-btn__label")||t.classList.contains("checkbox-btn__checkbox")||t.classList.contains("deliver-or-pickup__confirm-btn")||t.classList.contains("contract-services__delivery-confirm"))&&e.preventDefault()};e.forEach((function(e){e.addEventListener("click",t)}))}}(),function(){var e=document.querySelectorAll(".contracts__link");if(e[0]){var t=function(e){var t=e.target;(t.classList.contains("checkbox-btn__label")||t.classList.contains("checkbox-btn__checkbox")||t.classList.contains("contract-info__verification")||t.classList.contains("payment-waiting__confirm-btn")||t.classList.contains("contract-services__delivery-confirm"))&&e.preventDefault()};e.forEach((function(e){e.addEventListener("click",t)}))}}(),function(){var e=document.querySelectorAll(".subscription-page__action-item--delete");if(e[0]){var t=document.getElementById("delete-service__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.querySelectorAll(".deliver-or-pickup__confirm-btn");if(e[0]){var t=document.getElementById("delivery-or-pickup__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.getElementById("delivery-or-pickup__modal");if(e){$("#delivery-date").datepicker().on("change",(function(e){u()}));var t=e.querySelector(".modal__close"),n=e.querySelector(".modal__overlay"),a=e.querySelector(".modal__submit"),i=e.querySelector(".delivery-or-pickup__modal-input-file"),o=e.querySelector(".input-file__input"),c=e.querySelector(".file-load__clear"),r=e.querySelector(".delivery-or-pickup__modal-date"),s=e.querySelector(".delivery-or-pickup__modal-time"),l=e.querySelector(".checkbox__input"),d=function(){i.classList.contains("loaded")&&(i.classList.remove("loaded"),o.value="",a.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(o.type="",o.type="file")),r.value="",s.value="",l.checked=!1,$("#delivery-date").datepicker("setDate","")},u=function(e){f()&&a.hasAttribute("disabled")?a.removeAttribute("disabled"):f()||a.hasAttribute("disabled")||a.setAttribute("disabled","")},f=function(){return $("#delivery-date").datepicker("getDate")&&""!==s.value&&!0===l.checked&&""!==o.value};t.addEventListener("click",d),n.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&d()})),r.addEventListener("input",u),s.addEventListener("input",u),o.addEventListener("change",u),l.addEventListener("change",u),c.addEventListener("click",(function(){a.hasAttribute("disabled")||a.setAttribute("disabled","")}))}}(),function(){var e=$(".mutual-calcs__earned-date-menu");$(".mutual-calcs__earned-date-btn");$.extend($.datepicker,{_inlineDatepicker2:$.datepicker._inlineDatepicker,_inlineDatepicker:function(e,t){this._inlineDatepicker2(e,t);var n=$.datepicker._get(t,"beforeShow");n&&n.apply(e,[e,t])}}),$(".mutual-calcs__earned-date-btn").on("click",(function(){$(".mutual-calcs__earned-date-menu").toggle()})),$(".date-input-period").datepicker({range:"period",inline:!0,showButtonPanel:!0,showOtherMonths:!0,selectOtherMonths:!0,closeText:"Готово",beforeShow:function(e,t){t.dpDiv.css("transform","translateX(-24px)"),t.dpDiv.addClass("calendar-range")},onSelect:function(e,t,n){$(".mutual-calcs__earned-date-btn").text(n.startDateText+" - "+n.endDateText)}}),$(document).mouseup((function(e){var t=$(".mutual-calcs__earned-date-menu"),n=$(".mutual-calcs__earned-date-btn");t.is(e.target)||0!==t.has(e.target).length||n.is(e.target)||0!==n.has(e.target).length||t.hide()})),$(".mutual-calcs__earned-date-menu-btn").on("click",(function(){$(this).hasClass("all-time")?$(".mutual-calcs__earned-date-btn").text($(this).text()+" (с "+$(".earned-date__start-period").text()+")"):$(".mutual-calcs__earned-date-btn").text($(this).text()),e.hide()})),$(".mutual-calcs__earned-date-btn").text($(".mutual-calcs__earned-date-menu-btn.all-time").text()+" (с "+$(".earned-date__start-period").text()+")")}(),$(".filters__btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".installation__confirm-btn");if(e[0]){var t=document.getElementById("installation__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.querySelectorAll(".delivery-or-pickup__installation-choose-block  input");if(e[0]){var t=e[0].parentNode.parentNode.parentNode.parentNode;e.forEach((function(e){e.addEventListener("change",n)}))}function n(){console.log(t),e[0].checked&&(t.classList.contains("show-for-manual")&&t.classList.remove("show-for-manual"),t.classList.contains("show-for-registration")&&t.classList.remove("show-for-registration"),t.classList.contains("show-for-delivery")||t.classList.add("show-for-delivery")),e[1].checked&&(t.classList.contains("show-for-manual")&&t.classList.remove("show-for-manual"),t.classList.contains("show-for-delivery")&&t.classList.remove("show-for-delivery"),t.classList.contains("show-for-registration")||t.classList.add("show-for-registration")),e[2].checked&&(t.classList.contains("show-for-delivery")&&t.classList.remove("show-for-delivery"),t.classList.contains("show-for-registration")&&t.classList.remove("show-for-registration"),t.classList.contains("show-for-manual")||t.classList.add("show-for-manual"))}}(),function(){var e=document.getElementById("installation__modal");if(e){$("#delivery-date").datepicker().on("change",(function(e){s()}));var t=e.querySelector(".modal__close"),n=e.querySelector(".modal__overlay"),a=e.querySelector(".modal__submit"),i=e.querySelector(".delivery-or-pickup__modal-date"),o=e.querySelector(".delivery-or-pickup__modal-time"),c=e.querySelector(".checkbox__input"),r=function(){i.value="",o.value="",c.checked=!1,$("#delivery-date").datepicker("setDate","")},s=function(e){l()&&a.hasAttribute("disabled")?a.removeAttribute("disabled"):l()||a.hasAttribute("disabled")||a.setAttribute("disabled","")},l=function(){return $("#delivery-date").datepicker("getDate")&&""!==o.value&&!0===c.checked};t.addEventListener("click",r),n.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&r()})),i.addEventListener("input",s),o.addEventListener("input",s),c.addEventListener("change",s)}}(),function(){var e=document.querySelectorAll(".mutual-calcs__make-payment");if(e[0]){var t=document.getElementById("payment-waiting__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.querySelectorAll(".payment-waiting__confirm-btn");if(e[0]){var t=document.getElementById("payment-waiting__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.getElementById("payment-waiting__modal");if(e){var t=e.querySelector(".modal__close"),n=e.querySelector(".modal__overlay"),a=e.querySelector(".transactions__check-all input"),i=e.querySelector(".payment-waiting__modal-sender input"),o=e.querySelector(".payment-waiting__modal-recipient input"),c=e.querySelector(".payment-waiting__modal-sum input"),r=e.querySelector(".payment-waiting__modal-purpose input"),s=function(){return e.querySelectorAll(".transactions__check input")},l=function(){a.checked=!1,s().forEach((function(e){e.checked=!1,e.parentNode.parentNode.parentNode.parentNode.classList.remove("checked")})),$("#payment-date").datepicker("setDate",""),i.value="",o.value="",c.value="",r.value=""},d=function(e){e.target.checked?e.target.parentNode.parentNode.parentNode.parentNode.classList.add("checked"):e.target.parentNode.parentNode.parentNode.parentNode.classList.remove("checked")};t.addEventListener("click",l),n.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&l()})),a.addEventListener("change",(function(){s().forEach((function(e){var t=e.parentNode.parentNode.parentNode.parentNode;a.checked?(e.checked=!0,t.classList.contains("checked")||t.classList.add("checked")):(e.checked=!1,t.classList.contains("checked")&&t.classList.remove("checked"))}))})),s().forEach((function(e){e.addEventListener("change",d)}))}}(),function(){var e=document.querySelectorAll(".mutual-calcs-payment-block__link");if(e[0]){var t=document.getElementById("payment-info__modal");e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.querySelectorAll(".contract-device__schedule");if(e[0]){var t=document.getElementById("schedule__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){if(document.getElementById("schedule__modal")){var e=document.querySelectorAll(".schedule__modal-toggle input"),t=document.querySelector(".schedule__modal-toggle");e.forEach((function(e,n){e.addEventListener("change",(function(){0===n&&(t.classList.remove("second-tab"),t.classList.add("first-tab")),1===n&&(t.classList.remove("first-tab"),t.classList.add("second-tab"))}))}))}}(),$(".support__docs-btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".contract-info__verification");if(e[0]){var t=document.getElementById("verification__modal");t&&e.forEach((function(e){new Modal(e,t)}))}}(),function(){var e=document.getElementById("verification__modal");if(e){var t=e.querySelector(".verification__modal-input-file"),n=e.querySelector(".input-file__input"),a=e.querySelector(".modal__close"),i=e.querySelector(".modal__overlay"),o=e.querySelector(".modal__save"),c=e.querySelector(".file-load__clear"),r=function(){t.classList.contains("loaded")&&(t.classList.remove("loaded"),n.value="",o.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(n.type="",n.type="file"))};a.addEventListener("click",r),i.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&r()})),n.addEventListener("change",(function(){""!==n.value&&o.removeAttribute("disabled")})),c.addEventListener("click",(function(){o.hasAttribute("disabled")||o.setAttribute("disabled","")}))}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
