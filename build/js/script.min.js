"use strict";!function(){var e=document.querySelectorAll(".checkbox-2__input");e[0]&&e.forEach((function(e){e.addEventListener("change",(function(e){var t=e.target;!0===t.checked?t.parentNode.classList.add("checked"):t.parentNode.classList.remove("checked")}))}))}(),$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".input-file__label");function t(e){var t=e.querySelector("input"),n=e.parentNode.querySelector(".file-load__clear");function i(e){e.preventDefault(),e.stopPropagation()}function o(t){e.classList.add("highlight")}function c(t){e.classList.remove("highlight")}["dragenter","dragover","dragleave","drop"].forEach((function(t){e.addEventListener(t,i,!1)})),["dragenter","dragover"].forEach((function(t){e.addEventListener(t,o,!1)})),["dragleave","drop"].forEach((function(t){e.addEventListener(t,c,!1)})),e.addEventListener("drop",(function(e){var n=e.dataTransfer.files;t.files&&t.files[0]&&(t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file"));t.files=n,a()}),!1);var a=function(){l(t)},l=function(t){if(t.files&&t.files[0]){var n=new FileReader;n.onload=function(n){e.parentNode.classList.add("loaded"),e.nextElementSibling.querySelector(".file-load__name").textContent=t.files[0].name},n.readAsDataURL(t.files[0])}};t.addEventListener("change",a),n.addEventListener("click",(function(){e.parentNode.classList.remove("loaded"),t.value="",/safari/i.test(navigator.userAgent)||(t.type="",t.type="file")}))}window.makeFileLoad=t,e[0]&&e.forEach((function(e){t(e)}))}(),function(){var e=document.querySelectorAll(".input-text");e[0]&&e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))}))}(),function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"));var t=document.querySelector("body");function n(e,t){this.trigger=e,this.modal=t,this.overlay=this.modal.querySelector(".modal__overlay"),this.closeBtn=this.modal.querySelector(".modal__close"),this.onOverlayClick=this.onOverlayClick.bind(this),this.onCloseClick=this.onCloseClick.bind(this),this.onTriggerClick=this.onTriggerClick.bind(this),this.onResize=this.onResize.bind(this),this.addEventListeners()}n.prototype.open=function(){this.modal.classList.add("js-show"),t.classList.add("js__body-no-scroll")},n.prototype.close=function(){this.modal.classList.remove("js-show"),t.classList.remove("js__body-no-scroll")},n.prototype.onOverlayClick=function(e){e.target===this.overlay&&this.close()},n.prototype.onCloseClick=function(){this.close()},n.prototype.onTriggerClick=function(){this.open()},n.prototype.onResize=function(){var e=.01*window.innerHeight;document.documentElement.style.setProperty("--vh","".concat(e,"px"))},n.prototype.addEventListeners=function(){var e,t;this.overlay.addEventListener("click",this.onOverlayClick),this.closeBtn.addEventListener("click",this.onCloseClick),this.trigger.addEventListener("click",this.onTriggerClick),window.addEventListener("resize",(e=this.onResize,function(n){t&&clearTimeout(t),t=setTimeout(e,100,n)}))},window.Modal=n}(),function(){var e=document.querySelectorAll(".input-phone");if(e[0]){var t=new Inputmask("+7(999) 999-99-99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelectorAll(".search"),t=document.querySelectorAll(".search + .search-close");e[0]&&(e.forEach((function(e){e.addEventListener("blur",(function(){""===e.value.split(" ").join("")&&(e.value=""),""===e.value||e.classList.contains("js-inputed")||e.classList.add("js-inputed"),""===e.value&&e.classList.contains("js-inputed")&&e.classList.remove("js-inputed")}))})),t.forEach((function(e){e.addEventListener("click",(function(){var t=e.previousElementSibling;t.value="",t.classList.contains("js-inputed")&&t.classList.remove("js-inputed")}))})))}(),function(){function e(e){var t=e.text.split("splitter");return t.length>1?$("<span>"+t[0]+"</span><span>"+t[1]+"</span>"):e.text}$(".select").select2({templateResult:e,templateSelection:e}),$(".select").on("select2:select",(function(e){$(this).addClass("picked")}))}(),function(){var e=document.querySelectorAll(".delivery-or-pickup__modal-time");if(e[0]){var t=new Inputmask("99:99");e.forEach((function(e){t.mask(e)}))}}(),function(){var e=document.querySelector(".contract-info__cancellation");if(e){var t=document.getElementById("cancellation__modal");new Modal(e,t)}}(),$(".delivery-or-pickup.done").click((function(){$(this).find(".contract-info__delivered-adress").slideToggle(),$(this).find(".contract-info__delivered-toggle").toggleClass("opened")})),function(){if(document.querySelector(".contract-services")){var e=document.querySelectorAll(".contract-services__link"),t=function(e){var t=e.target;console.log(t.classList.contains("chekcbox-btn__label")),(t.classList.contains("checkbox-btn__label")||t.classList.contains("checkbox-btn__checkbox")||t.classList.contains("deliver-or-pickup__confirm-btn")||t.classList.contains("contract-services__delivery-confirm"))&&e.preventDefault()};e.forEach((function(e){e.addEventListener("click",t)}))}}(),document.querySelector(".contracts-all")&&$(".date-input").datepicker(),function(){var e=document.querySelectorAll(".deliver-or-pickup__confirm-btn");if(e[0]){$("#delivery-date").datepicker().on("change",(function(e){u()}));var t=document.getElementById("delivery-or-pickup__modal"),n=t.querySelector(".modal__close"),i=t.querySelector(".modal__overlay"),o=t.querySelector(".modal__submit"),c=t.querySelector(".delivery-or-pickup__modal-input-file"),a=t.querySelector(".input-file__input"),l=t.querySelector(".delivery-or-pickup__modal-date"),r=t.querySelector(".delivery-or-pickup__modal-time"),s=t.querySelector(".checkbox__input");e.forEach((function(e){new Modal(e,t)}));var d=function(){c.classList.contains("loaded")&&(c.classList.remove("loaded"),a.value="",o.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(a.type="",a.type="file")),l.value="",r.value="",s.checked=!1,$("#delivery-date").datepicker("setDate","")},u=function(e){v()&&o.hasAttribute("disabled")?o.removeAttribute("disabled"):v()||o.hasAttribute("disabled")||o.setAttribute("disabled","")},v=function(){return $("#delivery-date").datepicker("getDate")&&""!==r.value&&!0===s.checked&&""!==a.value};n.addEventListener("click",d),i.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&d()})),l.addEventListener("input",u),r.addEventListener("input",u),a.addEventListener("change",u),s.addEventListener("change",u)}}(),$(".filters__btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelectorAll(".payment-waiting__confirm-btn");if(e[0]){$("#payment-date").datepicker();var t=document.getElementById("payment-waiting__modal"),n=t.querySelector(".modal__close"),i=t.querySelector(".modal__overlay"),o=t.querySelector(".transactions__check-all input"),c=t.querySelector(".payment-waiting__modal-sender input"),a=t.querySelector(".payment-waiting__modal-recipient input"),l=t.querySelector(".payment-waiting__modal-sum input"),r=t.querySelector(".payment-waiting__modal-purpose input"),s=function(){return t.querySelectorAll(".transactions__check input")},d=function(){o.checked=!1,s().forEach((function(e){e.checked=!1})),$("#payment-date").datepicker("setDate",""),c.value="",a.value="",l.value="",r.value=""};e.forEach((function(e){new Modal(e,t)})),n.addEventListener("click",d),i.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&d()})),o.addEventListener("change",(function(){s().forEach((function(e){o.checked?e.checked=!0:e.checked=!1}))}))}}(),function(){var e=document.querySelectorAll(".contract-device__schedule");if(e[0]){var t=document.getElementById("schedule__modal"),n=document.querySelectorAll(".schedule__modal-toggle input"),i=document.querySelector(".schedule__modal-toggle");n.forEach((function(e,t){e.addEventListener("change",(function(){0===t&&(i.classList.remove("second-tab"),i.classList.add("first-tab")),1===t&&(i.classList.remove("first-tab"),i.classList.add("second-tab"))}))})),e.forEach((function(e){new Modal(e,t)}))}}(),$(".support__docs-btn").click((function(){$(this).parent().next().slideToggle(),$(this).toggleClass("opened")})),function(){var e=document.querySelector(".contract-info__verification");if(e){var t=document.getElementById("verification__modal"),n=t.querySelector(".verification__modal-input-file"),i=t.querySelector(".input-file__input"),o=t.querySelector(".modal__close"),c=t.querySelector(".modal__overlay"),a=document.querySelector(".modal__save"),l=function(){n.classList.contains("loaded")&&(n.classList.remove("loaded"),i.value="",a.setAttribute("disabled",""),/safari/i.test(navigator.userAgent)||(i.type="",i.type="file"))};new Modal(e,t),o.addEventListener("click",l),c.addEventListener("click",(function(e){e.target.classList.contains("modal__overlay")&&l()})),i.addEventListener("change",(function(){""!==i.value&&a.removeAttribute("disabled")}))}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
